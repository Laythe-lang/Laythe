<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="629.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;laythe_lib::math::utils::Rem as laythe_core::native::NativeFun&gt;::call (7 samples, 0.26%)</title><rect x="0.0000%" y="549" width="0.2575%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (15 samples, 0.55%)</title><rect x="0.2575%" y="549" width="0.5519%" height="15" fill="rgb(217,0,24)"/><text x="0.5075%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (12 samples, 0.44%)</title><rect x="0.8094%" y="549" width="0.4415%" height="15" fill="rgb(221,193,54)"/><text x="1.0594%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (26 samples, 0.96%)</title><rect x="1.2509%" y="549" width="0.9566%" height="15" fill="rgb(248,212,6)"/><text x="1.5009%" y="559.50"></text></g><g><title>[[heap]] (72 samples, 2.65%)</title><rect x="0.0000%" y="565" width="2.6490%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="575.50">[[..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::to_call_result (12 samples, 0.44%)</title><rect x="2.2075%" y="549" width="0.4415%" height="15" fill="rgb(232,128,0)"/><text x="2.4575%" y="559.50"></text></g><g><title>laythe_core::hooks::Hooks::call (6 samples, 0.22%)</title><rect x="2.7962%" y="533" width="0.2208%" height="15" fill="rgb(207,160,47)"/><text x="3.0462%" y="543.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::MapIterator as laythe_core::iterator::SlIter&gt;::next (22 samples, 0.81%)</title><rect x="2.6490%" y="549" width="0.8094%" height="15" fill="rgb(228,23,34)"/><text x="2.8990%" y="559.50"></text></g><g><title>laythe_core::iterator::SlIterator::next (12 samples, 0.44%)</title><rect x="3.0169%" y="533" width="0.4415%" height="15" fill="rgb(218,30,26)"/><text x="3.2669%" y="543.50"></text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::call (84 samples, 3.09%)</title><rect x="3.4584%" y="549" width="3.0905%" height="15" fill="rgb(220,122,19)"/><text x="3.7084%" y="559.50">&lt;la..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run_fun (34 samples, 1.25%)</title><rect x="5.2980%" y="533" width="1.2509%" height="15" fill="rgb(250,228,42)"/><text x="5.5480%" y="543.50"></text></g><g><title>[[stack]] (113 samples, 4.16%)</title><rect x="2.6490%" y="565" width="4.1575%" height="15" fill="rgb(240,193,28)"/><text x="2.8990%" y="575.50">[[sta..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (6 samples, 0.22%)</title><rect x="6.5857%" y="549" width="0.2208%" height="15" fill="rgb(216,20,37)"/><text x="6.8357%" y="559.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::FilterIterator as laythe_core::iterator::SlIter&gt;::current (5 samples, 0.18%)</title><rect x="6.8433%" y="549" width="0.1840%" height="15" fill="rgb(206,188,39)"/><text x="7.0933%" y="559.50"></text></g><g><title>laythe_core::hooks::Hooks::call (10 samples, 0.37%)</title><rect x="7.7999%" y="533" width="0.3679%" height="15" fill="rgb(217,207,13)"/><text x="8.0499%" y="543.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::FilterIterator as laythe_core::iterator::SlIter&gt;::next (39 samples, 1.43%)</title><rect x="7.0272%" y="549" width="1.4349%" height="15" fill="rgb(231,73,38)"/><text x="7.2772%" y="559.50"></text></g><g><title>laythe_core::iterator::SlIterator::next (8 samples, 0.29%)</title><rect x="8.1678%" y="533" width="0.2943%" height="15" fill="rgb(225,20,46)"/><text x="8.4178%" y="543.50"></text></g><g><title>laythe_core::hooks::Hooks::call (13 samples, 0.48%)</title><rect x="8.4621%" y="533" width="0.4783%" height="15" fill="rgb(210,31,41)"/><text x="8.7121%" y="543.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::IterReduce as laythe_core::native::NativeMethod&gt;::call (25 samples, 0.92%)</title><rect x="8.4621%" y="549" width="0.9198%" height="15" fill="rgb(221,200,47)"/><text x="8.7121%" y="559.50"></text></g><g><title>laythe_core::iterator::SlIterator::next (12 samples, 0.44%)</title><rect x="8.9404%" y="533" width="0.4415%" height="15" fill="rgb(226,26,5)"/><text x="9.1904%" y="543.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::MapIterator as laythe_core::iterator::SlIter&gt;::next (16 samples, 0.59%)</title><rect x="9.3819%" y="549" width="0.5887%" height="15" fill="rgb(249,33,26)"/><text x="9.6319%" y="559.50"></text></g><g><title>&lt;laythe_lib::math::utils::Rem as laythe_core::native::NativeFun&gt;::meta (3 samples, 0.11%)</title><rect x="9.9706%" y="549" width="0.1104%" height="15" fill="rgb(235,183,28)"/><text x="10.2206%" y="559.50"></text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::call (8 samples, 0.29%)</title><rect x="10.0809%" y="549" width="0.2943%" height="15" fill="rgb(221,5,38)"/><text x="10.3309%" y="559.50"></text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::HookContext&gt;::call_context (10 samples, 0.37%)</title><rect x="10.3753%" y="549" width="0.3679%" height="15" fill="rgb(247,18,42)"/><text x="10.6253%" y="559.50"></text></g><g><title>laythe_core::signature::ParameterKind::is_valid (5 samples, 0.18%)</title><rect x="10.7432%" y="549" width="0.1840%" height="15" fill="rgb(241,131,45)"/><text x="10.9932%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (18 samples, 0.66%)</title><rect x="10.9272%" y="549" width="0.6623%" height="15" fill="rgb(249,31,29)"/><text x="11.1772%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::check_native_arity (16 samples, 0.59%)</title><rect x="11.5894%" y="549" width="0.5887%" height="15" fill="rgb(225,111,53)"/><text x="11.8394%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::close_upvalues (100 samples, 3.68%)</title><rect x="12.1781%" y="549" width="3.6792%" height="15" fill="rgb(238,160,17)"/><text x="12.4281%" y="559.50">layt..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (37 samples, 1.36%)</title><rect x="15.8572%" y="549" width="1.3613%" height="15" fill="rgb(214,148,48)"/><text x="16.1072%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call_native_fun (4 samples, 0.15%)</title><rect x="17.0714%" y="533" width="0.1472%" height="15" fill="rgb(232,36,49)"/><text x="17.3214%" y="543.50"></text></g><g><title>[unknown] (316 samples, 11.63%)</title><rect x="6.8065%" y="565" width="11.6262%" height="15" fill="rgb(209,103,24)"/><text x="7.0565%" y="575.50">[unknown]</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (33 samples, 1.21%)</title><rect x="17.2185%" y="549" width="1.2141%" height="15" fill="rgb(229,88,8)"/><text x="17.4685%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_return (12 samples, 0.44%)</title><rect x="17.9912%" y="533" width="0.4415%" height="15" fill="rgb(213,181,19)"/><text x="18.2412%" y="543.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (16 samples, 0.59%)</title><rect x="18.4327%" y="549" width="0.5887%" height="15" fill="rgb(254,191,54)"/><text x="18.6827%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (24 samples, 0.88%)</title><rect x="19.0213%" y="549" width="0.8830%" height="15" fill="rgb(241,83,37)"/><text x="19.2713%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (20 samples, 0.74%)</title><rect x="19.9043%" y="549" width="0.7358%" height="15" fill="rgb(233,36,39)"/><text x="20.1543%" y="559.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_return (5 samples, 0.18%)</title><rect x="20.4562%" y="533" width="0.1840%" height="15" fill="rgb(226,3,54)"/><text x="20.7062%" y="543.50"></text></g><g><title>__do_global_dtors_aux_fini_array_entry (66 samples, 2.43%)</title><rect x="18.4327%" y="565" width="2.4283%" height="15" fill="rgb(245,192,40)"/><text x="18.6827%" y="575.50">__..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::to_call_result (6 samples, 0.22%)</title><rect x="20.6402%" y="549" width="0.2208%" height="15" fill="rgb(238,167,29)"/><text x="20.8902%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (9 samples, 0.33%)</title><rect x="21.0081%" y="341" width="0.3311%" height="15" fill="rgb(232,182,51)"/><text x="21.2581%" y="351.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 1.18%)</title><rect x="22.4062%" y="293" width="1.1773%" height="15" fill="rgb(231,60,39)"/><text x="22.6562%" y="303.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (8 samples, 0.29%)</title><rect x="23.2892%" y="277" width="0.2943%" height="15" fill="rgb(208,69,12)"/><text x="23.5392%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.29%)</title><rect x="23.2892%" y="261" width="0.2943%" height="15" fill="rgb(235,93,37)"/><text x="23.5392%" y="271.50"></text></g><g><title>core::slice::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (7 samples, 0.26%)</title><rect x="23.5835%" y="293" width="0.2575%" height="15" fill="rgb(213,116,39)"/><text x="23.8335%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.26%)</title><rect x="23.5835%" y="277" width="0.2575%" height="15" fill="rgb(222,207,29)"/><text x="23.8335%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.11%)</title><rect x="24.2826%" y="277" width="0.1104%" height="15" fill="rgb(206,96,30)"/><text x="24.5326%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (3 samples, 0.11%)</title><rect x="24.2826%" y="261" width="0.1104%" height="15" fill="rgb(218,138,4)"/><text x="24.5326%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.11%)</title><rect x="24.2826%" y="245" width="0.1104%" height="15" fill="rgb(250,191,14)"/><text x="24.5326%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (25 samples, 0.92%)</title><rect x="23.8411%" y="293" width="0.9198%" height="15" fill="rgb(239,60,40)"/><text x="24.0911%" y="303.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::check_arity (8 samples, 0.29%)</title><rect x="24.4665%" y="277" width="0.2943%" height="15" fill="rgb(206,27,48)"/><text x="24.7165%" y="287.50"></text></g><g><title>laythe_core::signature::Arity::check (8 samples, 0.29%)</title><rect x="24.4665%" y="261" width="0.2943%" height="15" fill="rgb(225,35,8)"/><text x="24.7165%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (14 samples, 0.52%)</title><rect x="24.7609%" y="293" width="0.5151%" height="15" fill="rgb(250,213,24)"/><text x="25.0109%" y="303.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_val (9 samples, 0.33%)</title><rect x="24.9448%" y="277" width="0.3311%" height="15" fill="rgb(247,123,22)"/><text x="25.1948%" y="287.50"></text></g><g><title>laythe_core::value::boxed::Value::kind (26 samples, 0.96%)</title><rect x="25.5335%" y="277" width="0.9566%" height="15" fill="rgb(231,138,38)"/><text x="25.7835%" y="287.50"></text></g><g><title>laythe_core::value::boxed::Value::is_num (7 samples, 0.26%)</title><rect x="26.2325%" y="261" width="0.2575%" height="15" fill="rgb(231,145,46)"/><text x="26.4825%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (40 samples, 1.47%)</title><rect x="25.2759%" y="293" width="1.4717%" height="15" fill="rgb(251,118,11)"/><text x="25.5259%" y="303.50"></text></g><g><title>laythe_core::value::boxed::Value::to_closure (7 samples, 0.26%)</title><rect x="26.4901%" y="277" width="0.2575%" height="15" fill="rgb(217,147,25)"/><text x="26.7401%" y="287.50"></text></g><g><title>laythe_core::value::boxed::Value::to_obj_tag (7 samples, 0.26%)</title><rect x="26.4901%" y="261" width="0.2575%" height="15" fill="rgb(247,81,37)"/><text x="26.7401%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (6 samples, 0.22%)</title><rect x="27.5570%" y="277" width="0.2208%" height="15" fill="rgb(209,12,38)"/><text x="27.8070%" y="287.50"></text></g><g><title>laythe_core::value::boxed::Value::to_num (8 samples, 0.29%)</title><rect x="28.1825%" y="261" width="0.2943%" height="15" fill="rgb(227,1,9)"/><text x="28.4325%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (17 samples, 0.63%)</title><rect x="28.4768%" y="261" width="0.6255%" height="15" fill="rgb(248,47,43)"/><text x="28.7268%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (14 samples, 0.52%)</title><rect x="28.5872%" y="245" width="0.5151%" height="15" fill="rgb(221,10,30)"/><text x="28.8372%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_add (51 samples, 1.88%)</title><rect x="27.7778%" y="277" width="1.8764%" height="15" fill="rgb(210,229,1)"/><text x="28.0278%" y="287.50">l..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (15 samples, 0.55%)</title><rect x="29.1023%" y="261" width="0.5519%" height="15" fill="rgb(222,148,37)"/><text x="29.3523%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (10 samples, 0.37%)</title><rect x="30.0221%" y="261" width="0.3679%" height="15" fill="rgb(234,67,33)"/><text x="30.2721%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_get_local (24 samples, 0.88%)</title><rect x="29.6542%" y="277" width="0.8830%" height="15" fill="rgb(247,98,35)"/><text x="29.9042%" y="287.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (4 samples, 0.15%)</title><rect x="30.3900%" y="261" width="0.1472%" height="15" fill="rgb(247,138,52)"/><text x="30.6400%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (3 samples, 0.11%)</title><rect x="30.4268%" y="245" width="0.1104%" height="15" fill="rgb(213,79,30)"/><text x="30.6768%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.11%)</title><rect x="30.4268%" y="229" width="0.1104%" height="15" fill="rgb(246,177,23)"/><text x="30.6768%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_less (8 samples, 0.29%)</title><rect x="30.5372%" y="277" width="0.2943%" height="15" fill="rgb(230,62,27)"/><text x="30.7872%" y="287.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::runtime_error (8 samples, 0.29%)</title><rect x="30.5372%" y="261" width="0.2943%" height="15" fill="rgb(216,154,8)"/><text x="30.7872%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_error (8 samples, 0.29%)</title><rect x="30.5372%" y="245" width="0.2943%" height="15" fill="rgb(244,35,45)"/><text x="30.7872%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_return (41 samples, 1.51%)</title><rect x="30.8315%" y="277" width="1.5085%" height="15" fill="rgb(251,115,12)"/><text x="31.0815%" y="287.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (8 samples, 0.29%)</title><rect x="32.0456%" y="261" width="0.2943%" height="15" fill="rgb(240,54,50)"/><text x="32.2956%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (6 samples, 0.22%)</title><rect x="32.1192%" y="245" width="0.2208%" height="15" fill="rgb(233,84,52)"/><text x="32.3692%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run_fun (353 samples, 12.99%)</title><rect x="21.8543%" y="309" width="12.9875%" height="15" fill="rgb(207,117,47)"/><text x="22.1043%" y="319.50">laythe_vm::vm::VmExe..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (220 samples, 8.09%)</title><rect x="26.7476%" y="293" width="8.0942%" height="15" fill="rgb(249,43,39)"/><text x="26.9976%" y="303.50">laythe_vm::..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (68 samples, 2.50%)</title><rect x="32.3400%" y="277" width="2.5018%" height="15" fill="rgb(209,38,44)"/><text x="32.5900%" y="287.50">la..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (41 samples, 1.51%)</title><rect x="33.3333%" y="261" width="1.5085%" height="15" fill="rgb(236,212,23)"/><text x="33.5833%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_ip (41 samples, 1.51%)</title><rect x="33.3333%" y="245" width="1.5085%" height="15" fill="rgb(242,79,21)"/><text x="33.5833%" y="255.50"></text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::call (371 samples, 13.65%)</title><rect x="21.6703%" y="325" width="13.6497%" height="15" fill="rgb(211,96,35)"/><text x="21.9203%" y="335.50">&lt;laythe_vm::vm::VmExe..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::to_call_result (13 samples, 0.48%)</title><rect x="34.8418%" y="309" width="0.4783%" height="15" fill="rgb(253,215,40)"/><text x="35.0918%" y="319.50"></text></g><g><title>laythe_core::hooks::Hooks::call (380 samples, 13.98%)</title><rect x="21.3760%" y="341" width="13.9809%" height="15" fill="rgb(211,81,21)"/><text x="21.6260%" y="351.50">laythe_core::hooks::H..</text></g><g><title>&lt;laythe_env::managed::Managed&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.11%)</title><rect x="36.3135%" y="309" width="0.1104%" height="15" fill="rgb(208,190,38)"/><text x="36.5635%" y="319.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.66%)</title><rect x="37.2333%" y="261" width="0.6623%" height="15" fill="rgb(235,213,38)"/><text x="37.4833%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (38 samples, 1.40%)</title><rect x="37.9323%" y="261" width="1.3981%" height="15" fill="rgb(237,122,38)"/><text x="38.1823%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.18%)</title><rect x="39.3672%" y="245" width="0.1840%" height="15" fill="rgb(244,218,35)"/><text x="39.6172%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (7 samples, 0.26%)</title><rect x="39.3304%" y="261" width="0.2575%" height="15" fill="rgb(240,68,47)"/><text x="39.5804%" y="271.50"></text></g><g><title>laythe_core::value::boxed::Value::kind (19 samples, 0.70%)</title><rect x="39.7351%" y="245" width="0.6990%" height="15" fill="rgb(210,16,53)"/><text x="39.9851%" y="255.50"></text></g><g><title>laythe_core::value::boxed::Value::is_num (4 samples, 0.15%)</title><rect x="40.2870%" y="229" width="0.1472%" height="15" fill="rgb(235,124,12)"/><text x="40.5370%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (25 samples, 0.92%)</title><rect x="39.5879%" y="261" width="0.9198%" height="15" fill="rgb(224,169,11)"/><text x="39.8379%" y="271.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (11 samples, 0.40%)</title><rect x="41.4643%" y="245" width="0.4047%" height="15" fill="rgb(250,166,2)"/><text x="41.7143%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (12 samples, 0.44%)</title><rect x="42.0530%" y="229" width="0.4415%" height="15" fill="rgb(242,216,29)"/><text x="42.3030%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (6 samples, 0.22%)</title><rect x="42.4945%" y="229" width="0.2208%" height="15" fill="rgb(230,116,27)"/><text x="42.7445%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (4 samples, 0.15%)</title><rect x="42.5681%" y="213" width="0.1472%" height="15" fill="rgb(228,99,48)"/><text x="42.8181%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_constant (54 samples, 1.99%)</title><rect x="41.8690%" y="245" width="1.9868%" height="15" fill="rgb(253,11,6)"/><text x="42.1190%" y="255.50">l..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_constant (31 samples, 1.14%)</title><rect x="42.7152%" y="229" width="1.1405%" height="15" fill="rgb(247,143,39)"/><text x="42.9652%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.74%)</title><rect x="43.1199%" y="213" width="0.7358%" height="15" fill="rgb(236,97,10)"/><text x="43.3699%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (20 samples, 0.74%)</title><rect x="43.1199%" y="197" width="0.7358%" height="15" fill="rgb(233,208,19)"/><text x="43.3699%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (20 samples, 0.74%)</title><rect x="43.1199%" y="181" width="0.7358%" height="15" fill="rgb(216,164,2)"/><text x="43.3699%" y="191.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_get_local (23 samples, 0.85%)</title><rect x="43.8558%" y="245" width="0.8462%" height="15" fill="rgb(220,129,5)"/><text x="44.1058%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (7 samples, 0.26%)</title><rect x="44.4444%" y="229" width="0.2575%" height="15" fill="rgb(242,17,10)"/><text x="44.6944%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (4 samples, 0.15%)</title><rect x="44.5548%" y="213" width="0.1472%" height="15" fill="rgb(242,107,0)"/><text x="44.8048%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.15%)</title><rect x="44.5548%" y="197" width="0.1472%" height="15" fill="rgb(251,28,31)"/><text x="44.8048%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="181" width="0.1472%" height="15" fill="rgb(233,223,10)"/><text x="44.8048%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="165" width="0.1472%" height="15" fill="rgb(215,21,27)"/><text x="44.8048%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="149" width="0.1472%" height="15" fill="rgb(232,23,21)"/><text x="44.8048%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="133" width="0.1472%" height="15" fill="rgb(244,5,23)"/><text x="44.8048%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="117" width="0.1472%" height="15" fill="rgb(226,81,46)"/><text x="44.8048%" y="127.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="101" width="0.1472%" height="15" fill="rgb(247,70,30)"/><text x="44.8048%" y="111.50"></text></g><g><title>[unknown] (4 samples, 0.15%)</title><rect x="44.5548%" y="85" width="0.1472%" height="15" fill="rgb(212,68,19)"/><text x="44.8048%" y="95.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (4 samples, 0.15%)</title><rect x="44.7020%" y="229" width="0.1472%" height="15" fill="rgb(240,187,13)"/><text x="44.9520%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_less (15 samples, 0.55%)</title><rect x="44.7020%" y="245" width="0.5519%" height="15" fill="rgb(223,113,26)"/><text x="44.9520%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::runtime_error (11 samples, 0.40%)</title><rect x="44.8492%" y="229" width="0.4047%" height="15" fill="rgb(206,192,2)"/><text x="45.0992%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_error (7 samples, 0.26%)</title><rect x="44.9963%" y="213" width="0.2575%" height="15" fill="rgb(241,108,4)"/><text x="45.2463%" y="223.50"></text></g><g><title>laythe_core::value::boxed::Value::is_num (14 samples, 0.52%)</title><rect x="45.7322%" y="229" width="0.5151%" height="15" fill="rgb(247,173,49)"/><text x="45.9822%" y="239.50"></text></g><g><title>laythe_core::value::boxed::Value::to_num (16 samples, 0.59%)</title><rect x="46.2472%" y="229" width="0.5887%" height="15" fill="rgb(224,114,35)"/><text x="46.4972%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (6 samples, 0.22%)</title><rect x="46.8359%" y="229" width="0.2208%" height="15" fill="rgb(245,159,27)"/><text x="47.0859%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_mul (56 samples, 2.06%)</title><rect x="45.2539%" y="245" width="2.0603%" height="15" fill="rgb(245,172,44)"/><text x="45.5039%" y="255.50">l..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (7 samples, 0.26%)</title><rect x="47.0567%" y="229" width="0.2575%" height="15" fill="rgb(236,23,11)"/><text x="47.3067%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::close_upvalues (5 samples, 0.18%)</title><rect x="48.7123%" y="229" width="0.1840%" height="15" fill="rgb(205,117,38)"/><text x="48.9623%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::closure (5 samples, 0.18%)</title><rect x="48.8962%" y="229" width="0.1840%" height="15" fill="rgb(237,72,25)"/><text x="49.1462%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.11%)</title><rect x="49.1538%" y="213" width="0.1104%" height="15" fill="rgb(244,70,9)"/><text x="49.4038%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (13 samples, 0.48%)</title><rect x="49.0802%" y="229" width="0.4783%" height="15" fill="rgb(217,125,39)"/><text x="49.3302%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (8 samples, 0.29%)</title><rect x="49.2642%" y="213" width="0.2943%" height="15" fill="rgb(235,36,10)"/><text x="49.5142%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_return (62 samples, 2.28%)</title><rect x="47.3142%" y="245" width="2.2811%" height="15" fill="rgb(251,123,47)"/><text x="47.5642%" y="255.50">l..</text></g><g><title>laythe_core::value::boxed::Value::is_num (9 samples, 0.33%)</title><rect x="50.0000%" y="229" width="0.3311%" height="15" fill="rgb(221,13,13)"/><text x="50.2500%" y="239.50"></text></g><g><title>laythe_core::value::boxed::Value::to_num (3 samples, 0.11%)</title><rect x="50.3311%" y="229" width="0.1104%" height="15" fill="rgb(238,131,9)"/><text x="50.5811%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (4 samples, 0.15%)</title><rect x="50.4415%" y="229" width="0.1472%" height="15" fill="rgb(211,50,8)"/><text x="50.6915%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_sub (33 samples, 1.21%)</title><rect x="49.5953%" y="245" width="1.2141%" height="15" fill="rgb(245,182,24)"/><text x="49.8453%" y="255.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (6 samples, 0.22%)</title><rect x="50.5887%" y="229" width="0.2208%" height="15" fill="rgb(242,14,37)"/><text x="50.8387%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.33%)</title><rect x="52.0603%" y="213" width="0.3311%" height="15" fill="rgb(246,228,12)"/><text x="52.3103%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run_fun (514 samples, 18.91%)</title><rect x="36.6078%" y="277" width="18.9110%" height="15" fill="rgb(213,55,15)"/><text x="36.8578%" y="287.50">laythe_vm::vm::VmExecutor&lt;I&gt;::..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (408 samples, 15.01%)</title><rect x="40.5077%" y="261" width="15.0110%" height="15" fill="rgb(209,9,3)"/><text x="40.7577%" y="271.50">laythe_vm::vm::VmExecut..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (128 samples, 4.71%)</title><rect x="50.8094%" y="245" width="4.7093%" height="15" fill="rgb(230,59,30)"/><text x="51.0594%" y="255.50">layth..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (94 samples, 3.46%)</title><rect x="52.0603%" y="229" width="3.4584%" height="15" fill="rgb(209,121,21)"/><text x="52.3103%" y="239.50">lay..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_ip (85 samples, 3.13%)</title><rect x="52.3915%" y="213" width="3.1273%" height="15" fill="rgb(220,109,13)"/><text x="52.6415%" y="223.50">lay..</text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::call (523 samples, 19.24%)</title><rect x="36.5342%" y="293" width="19.2421%" height="15" fill="rgb(232,18,1)"/><text x="36.7842%" y="303.50">&lt;laythe_vm::vm::VmExecutor&lt;I&gt; ..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::to_call_result (7 samples, 0.26%)</title><rect x="55.5188%" y="277" width="0.2575%" height="15" fill="rgb(215,41,42)"/><text x="55.7688%" y="287.50"></text></g><g><title>laythe_core::hooks::Hooks::call (527 samples, 19.39%)</title><rect x="36.4238%" y="309" width="19.3893%" height="15" fill="rgb(224,123,36)"/><text x="36.6738%" y="319.50">laythe_core::hooks::Hooks::call</text></g><g><title>&lt;laythe_env::managed::Managed&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.15%)</title><rect x="56.7697%" y="277" width="0.1472%" height="15" fill="rgb(240,125,3)"/><text x="57.0197%" y="287.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.40%)</title><rect x="58.3885%" y="229" width="0.4047%" height="15" fill="rgb(205,98,50)"/><text x="58.6385%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.11%)</title><rect x="59.5659%" y="213" width="0.1104%" height="15" fill="rgb(205,185,37)"/><text x="59.8159%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (3 samples, 0.11%)</title><rect x="59.5659%" y="197" width="0.1104%" height="15" fill="rgb(238,207,15)"/><text x="59.8159%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.11%)</title><rect x="59.5659%" y="181" width="0.1104%" height="15" fill="rgb(213,199,42)"/><text x="59.8159%" y="191.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call (28 samples, 1.03%)</title><rect x="58.7932%" y="229" width="1.0302%" height="15" fill="rgb(235,201,11)"/><text x="59.0432%" y="239.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::check_arity (3 samples, 0.11%)</title><rect x="59.7130%" y="213" width="0.1104%" height="15" fill="rgb(207,46,11)"/><text x="59.9630%" y="223.50"></text></g><g><title>laythe_core::signature::Arity::check (3 samples, 0.11%)</title><rect x="59.7130%" y="197" width="0.1104%" height="15" fill="rgb(241,35,35)"/><text x="59.9630%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (6 samples, 0.22%)</title><rect x="59.8234%" y="229" width="0.2208%" height="15" fill="rgb(243,32,47)"/><text x="60.0734%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.15%)</title><rect x="59.8970%" y="213" width="0.1472%" height="15" fill="rgb(247,202,23)"/><text x="60.1470%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (32 samples, 1.18%)</title><rect x="60.0442%" y="229" width="1.1773%" height="15" fill="rgb(219,102,11)"/><text x="60.2942%" y="239.50"></text></g><g><title>laythe_core::value::boxed::Value::kind (23 samples, 0.85%)</title><rect x="60.3753%" y="213" width="0.8462%" height="15" fill="rgb(243,110,44)"/><text x="60.6253%" y="223.50"></text></g><g><title>laythe_core::value::boxed::Value::is_num (6 samples, 0.22%)</title><rect x="61.0007%" y="197" width="0.2208%" height="15" fill="rgb(222,74,54)"/><text x="61.2507%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (10 samples, 0.37%)</title><rect x="64.0912%" y="213" width="0.3679%" height="15" fill="rgb(216,99,12)"/><text x="64.3412%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::peek (4 samples, 0.15%)</title><rect x="65.0110%" y="197" width="0.1472%" height="15" fill="rgb(226,22,26)"/><text x="65.2610%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::get_val (4 samples, 0.15%)</title><rect x="65.0110%" y="181" width="0.1472%" height="15" fill="rgb(217,163,10)"/><text x="65.2610%" y="191.50"></text></g><g><title>laythe_core::value::boxed::Value::kind (20 samples, 0.74%)</title><rect x="65.8205%" y="181" width="0.7358%" height="15" fill="rgb(213,25,53)"/><text x="66.0705%" y="191.50"></text></g><g><title>__fmod (5 samples, 0.18%)</title><rect x="67.9544%" y="149" width="0.1840%" height="15" fill="rgb(252,105,26)"/><text x="68.2044%" y="159.50"></text></g><g><title>__ieee754_fmod (233 samples, 8.57%)</title><rect x="68.1383%" y="149" width="8.5725%" height="15" fill="rgb(220,39,43)"/><text x="68.3883%" y="159.50">__ieee754_fm..</text></g><g><title>&lt;laythe_lib::math::utils::Rem as laythe_core::native::NativeFun&gt;::call (244 samples, 8.98%)</title><rect x="67.8440%" y="165" width="8.9772%" height="15" fill="rgb(229,68,48)"/><text x="68.0940%" y="175.50">&lt;laythe_lib::..</text></g><g><title>laythe_core::value::boxed::Value::to_num (3 samples, 0.11%)</title><rect x="76.7108%" y="149" width="0.1104%" height="15" fill="rgb(252,8,32)"/><text x="76.9608%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.22%)</title><rect x="76.8212%" y="165" width="0.2208%" height="15" fill="rgb(223,20,43)"/><text x="77.0712%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.26%)</title><rect x="78.0721%" y="133" width="0.2575%" height="15" fill="rgb(229,81,49)"/><text x="78.3221%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.26%)</title><rect x="78.0721%" y="117" width="0.2575%" height="15" fill="rgb(236,28,36)"/><text x="78.3221%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.26%)</title><rect x="78.0721%" y="101" width="0.2575%" height="15" fill="rgb(249,185,26)"/><text x="78.3221%" y="111.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::check_native_arity (70 samples, 2.58%)</title><rect x="77.0419%" y="165" width="2.5754%" height="15" fill="rgb(249,174,33)"/><text x="77.2919%" y="175.50">la..</text></g><g><title>laythe_core::signature::Signature::check (66 samples, 2.43%)</title><rect x="77.1891%" y="149" width="2.4283%" height="15" fill="rgb(233,201,37)"/><text x="77.4391%" y="159.50">la..</text></g><g><title>laythe_core::signature::ParameterKind::is_valid (35 samples, 1.29%)</title><rect x="78.3297%" y="133" width="1.2877%" height="15" fill="rgb(221,78,26)"/><text x="78.5797%" y="143.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_call (422 samples, 15.53%)</title><rect x="64.4592%" y="213" width="15.5261%" height="15" fill="rgb(250,127,30)"/><text x="64.7092%" y="223.50">laythe_vm::vm::VmExecuto..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (402 samples, 14.79%)</title><rect x="65.1950%" y="197" width="14.7903%" height="15" fill="rgb(230,49,44)"/><text x="65.4450%" y="207.50">laythe_vm::vm::VmExecut..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call_native_fun (365 samples, 13.43%)</title><rect x="66.5563%" y="181" width="13.4290%" height="15" fill="rgb(229,67,23)"/><text x="66.8063%" y="191.50">laythe_vm::vm::VmExe..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (10 samples, 0.37%)</title><rect x="79.6174%" y="165" width="0.3679%" height="15" fill="rgb(249,83,47)"/><text x="79.8674%" y="175.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_val (10 samples, 0.37%)</title><rect x="79.6174%" y="149" width="0.3679%" height="15" fill="rgb(215,43,3)"/><text x="79.8674%" y="159.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (9 samples, 0.33%)</title><rect x="79.9853%" y="197" width="0.3311%" height="15" fill="rgb(238,154,13)"/><text x="80.2353%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (8 samples, 0.29%)</title><rect x="80.3164%" y="197" width="0.2943%" height="15" fill="rgb(219,56,2)"/><text x="80.5664%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (6 samples, 0.22%)</title><rect x="80.3900%" y="181" width="0.2208%" height="15" fill="rgb(233,0,4)"/><text x="80.6400%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.22%)</title><rect x="80.3900%" y="165" width="0.2208%" height="15" fill="rgb(235,30,7)"/><text x="80.6400%" y="175.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_constant (26 samples, 0.96%)</title><rect x="79.9853%" y="213" width="0.9566%" height="15" fill="rgb(250,79,13)"/><text x="80.2353%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_constant (9 samples, 0.33%)</title><rect x="80.6107%" y="197" width="0.3311%" height="15" fill="rgb(211,146,34)"/><text x="80.8607%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.33%)</title><rect x="80.6107%" y="181" width="0.3311%" height="15" fill="rgb(228,22,38)"/><text x="80.8607%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (9 samples, 0.33%)</title><rect x="80.6107%" y="165" width="0.3311%" height="15" fill="rgb(235,168,5)"/><text x="80.8607%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9 samples, 0.33%)</title><rect x="80.6107%" y="149" width="0.3311%" height="15" fill="rgb(221,155,16)"/><text x="80.8607%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (89 samples, 3.27%)</title><rect x="80.9419%" y="133" width="3.2745%" height="15" fill="rgb(215,215,53)"/><text x="81.1919%" y="143.50">has..</text></g><g><title>&lt;laythe_env::managed::Managed&lt;T&gt; as core::hash::Hash&gt;::hash (89 samples, 3.27%)</title><rect x="80.9419%" y="117" width="3.2745%" height="15" fill="rgb(223,4,10)"/><text x="81.1919%" y="127.50">&lt;la..</text></g><g><title>core::ptr::hash (89 samples, 3.27%)</title><rect x="80.9419%" y="101" width="3.2745%" height="15" fill="rgb(234,103,6)"/><text x="81.1919%" y="111.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (89 samples, 3.27%)</title><rect x="80.9419%" y="85" width="3.2745%" height="15" fill="rgb(227,97,0)"/><text x="81.1919%" y="95.50">cor..</text></g><g><title>core::hash::Hasher::write_usize (89 samples, 3.27%)</title><rect x="80.9419%" y="69" width="3.2745%" height="15" fill="rgb(234,150,53)"/><text x="81.1919%" y="79.50">cor..</text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (86 samples, 3.16%)</title><rect x="81.0522%" y="53" width="3.1641%" height="15" fill="rgb(228,201,54)"/><text x="81.3022%" y="63.50">&lt;fn..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (77 samples, 2.83%)</title><rect x="81.3834%" y="37" width="2.8330%" height="15" fill="rgb(222,22,37)"/><text x="81.6334%" y="47.50">co..</text></g><g><title>&lt;hashbrown::raw::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.37%)</title><rect x="84.6578%" y="117" width="0.3679%" height="15" fill="rgb(237,53,32)"/><text x="84.9078%" y="127.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.66%)</title><rect x="85.0258%" y="117" width="0.6623%" height="15" fill="rgb(233,25,53)"/><text x="85.2758%" y="127.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.66%)</title><rect x="85.0258%" y="101" width="0.6623%" height="15" fill="rgb(210,40,34)"/><text x="85.2758%" y="111.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (18 samples, 0.66%)</title><rect x="85.0258%" y="85" width="0.6623%" height="15" fill="rgb(241,220,44)"/><text x="85.2758%" y="95.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::trailing_zeros (18 samples, 0.66%)</title><rect x="85.0258%" y="69" width="0.6623%" height="15" fill="rgb(235,28,35)"/><text x="85.2758%" y="79.50"></text></g><g><title>core::num::&lt;impl u16&gt;::trailing_zeros (18 samples, 0.66%)</title><rect x="85.0258%" y="53" width="0.6623%" height="15" fill="rgb(210,56,17)"/><text x="85.2758%" y="63.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::_{{closure}} (19 samples, 0.70%)</title><rect x="85.6880%" y="117" width="0.6990%" height="15" fill="rgb(224,130,29)"/><text x="85.9380%" y="127.50"></text></g><g><title>&lt;laythe_env::managed::Managed&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.44%)</title><rect x="85.9455%" y="101" width="0.4415%" height="15" fill="rgb(235,212,8)"/><text x="86.1955%" y="111.50"></text></g><g><title>core::ptr::eq (12 samples, 0.44%)</title><rect x="85.9455%" y="85" width="0.4415%" height="15" fill="rgb(223,33,50)"/><text x="86.1955%" y="95.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.15%)</title><rect x="86.3870%" y="117" width="0.1472%" height="15" fill="rgb(219,149,13)"/><text x="86.6370%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 1.14%)</title><rect x="86.5342%" y="101" width="1.1405%" height="15" fill="rgb(250,156,29)"/><text x="86.7842%" y="111.50"></text></g><g><title>laythe_core::module::Module::get_symbol (214 samples, 7.87%)</title><rect x="80.9419%" y="197" width="7.8734%" height="15" fill="rgb(216,193,19)"/><text x="81.1919%" y="207.50">laythe_core..</text></g><g><title>laythe_core::object::LyHashMap&lt;K,V&gt;::get (214 samples, 7.87%)</title><rect x="80.9419%" y="181" width="7.8734%" height="15" fill="rgb(216,135,14)"/><text x="81.1919%" y="191.50">laythe_core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (214 samples, 7.87%)</title><rect x="80.9419%" y="165" width="7.8734%" height="15" fill="rgb(241,47,5)"/><text x="81.1919%" y="175.50">hashbrown::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (214 samples, 7.87%)</title><rect x="80.9419%" y="149" width="7.8734%" height="15" fill="rgb(233,42,35)"/><text x="81.1919%" y="159.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (125 samples, 4.60%)</title><rect x="84.2163%" y="133" width="4.5990%" height="15" fill="rgb(231,13,6)"/><text x="84.4663%" y="143.50">hashb..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (62 samples, 2.28%)</title><rect x="86.5342%" y="117" width="2.2811%" height="15" fill="rgb(207,181,40)"/><text x="86.7842%" y="127.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (31 samples, 1.14%)</title><rect x="87.6748%" y="101" width="1.1405%" height="15" fill="rgb(254,173,49)"/><text x="87.9248%" y="111.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (31 samples, 1.14%)</title><rect x="87.6748%" y="85" width="1.1405%" height="15" fill="rgb(221,1,38)"/><text x="87.9248%" y="95.50"></text></g><g><title>core::core_arch::simd::i8x16::new (31 samples, 1.14%)</title><rect x="87.6748%" y="69" width="1.1405%" height="15" fill="rgb(206,124,46)"/><text x="87.9248%" y="79.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (19 samples, 0.70%)</title><rect x="88.8153%" y="197" width="0.6990%" height="15" fill="rgb(249,21,11)"/><text x="89.0653%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_short (3 samples, 0.11%)</title><rect x="89.5143%" y="197" width="0.1104%" height="15" fill="rgb(222,201,40)"/><text x="89.7643%" y="207.50"></text></g><g><title>laythe_core::value::boxed::Value::to_str (3 samples, 0.11%)</title><rect x="89.6247%" y="181" width="0.1104%" height="15" fill="rgb(235,61,29)"/><text x="89.8747%" y="191.50"></text></g><g><title>laythe_core::value::boxed::Value::to_obj_tag (3 samples, 0.11%)</title><rect x="89.6247%" y="165" width="0.1104%" height="15" fill="rgb(219,207,3)"/><text x="89.8747%" y="175.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_get_global (255 samples, 9.38%)</title><rect x="80.9419%" y="213" width="9.3819%" height="15" fill="rgb(222,56,46)"/><text x="81.1919%" y="223.50">laythe_vm::vm..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_string (19 samples, 0.70%)</title><rect x="89.6247%" y="197" width="0.6990%" height="15" fill="rgb(239,76,54)"/><text x="89.8747%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_constant (16 samples, 0.59%)</title><rect x="89.7351%" y="181" width="0.5887%" height="15" fill="rgb(231,124,27)"/><text x="89.9851%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.29%)</title><rect x="90.0294%" y="165" width="0.2943%" height="15" fill="rgb(249,195,6)"/><text x="90.2794%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (8 samples, 0.29%)</title><rect x="90.0294%" y="149" width="0.2943%" height="15" fill="rgb(237,174,47)"/><text x="90.2794%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.29%)</title><rect x="90.0294%" y="133" width="0.2943%" height="15" fill="rgb(206,201,31)"/><text x="90.2794%" y="143.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::push (9 samples, 0.33%)</title><rect x="90.8389%" y="197" width="0.3311%" height="15" fill="rgb(231,57,52)"/><text x="91.0889%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_get_local (40 samples, 1.47%)</title><rect x="90.3238%" y="213" width="1.4717%" height="15" fill="rgb(248,177,22)"/><text x="90.5738%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (17 samples, 0.63%)</title><rect x="91.1700%" y="197" width="0.6255%" height="15" fill="rgb(215,211,37)"/><text x="91.4200%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (6 samples, 0.22%)</title><rect x="91.7954%" y="197" width="0.2208%" height="15" fill="rgb(241,128,51)"/><text x="92.0454%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_less (15 samples, 0.55%)</title><rect x="91.7954%" y="213" width="0.5519%" height="15" fill="rgb(227,165,31)"/><text x="92.0454%" y="223.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::runtime_error (9 samples, 0.33%)</title><rect x="92.0162%" y="197" width="0.3311%" height="15" fill="rgb(228,167,24)"/><text x="92.2662%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_error (8 samples, 0.29%)</title><rect x="92.0530%" y="181" width="0.2943%" height="15" fill="rgb(228,143,12)"/><text x="92.3030%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.22%)</title><rect x="93.8558%" y="197" width="0.2208%" height="15" fill="rgb(249,149,8)"/><text x="94.1058%" y="207.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_return (51 samples, 1.88%)</title><rect x="92.3473%" y="213" width="1.8764%" height="15" fill="rgb(243,35,44)"/><text x="92.5973%" y="223.50">l..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::pop (3 samples, 0.11%)</title><rect x="94.1133%" y="197" width="0.1104%" height="15" fill="rgb(246,89,9)"/><text x="94.3633%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (19 samples, 0.70%)</title><rect x="95.2539%" y="181" width="0.6990%" height="15" fill="rgb(233,213,13)"/><text x="95.5039%" y="191.50"></text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run_fun (1,083 samples, 39.85%)</title><rect x="57.6895%" y="245" width="39.8455%" height="15" fill="rgb(233,141,41)"/><text x="57.9395%" y="255.50">laythe_vm::vm::VmExecutor&lt;I&gt;::run_fun</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (987 samples, 36.31%)</title><rect x="61.2215%" y="229" width="36.3135%" height="15" fill="rgb(239,167,4)"/><text x="61.4715%" y="239.50">laythe_vm::vm::VmExecutor&lt;I&gt;::run</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::read_byte (90 samples, 3.31%)</title><rect x="94.2237%" y="213" width="3.3113%" height="15" fill="rgb(209,217,16)"/><text x="94.4737%" y="223.50">lay..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::update_ip (62 samples, 2.28%)</title><rect x="95.2539%" y="197" width="2.2811%" height="15" fill="rgb(219,88,35)"/><text x="95.5039%" y="207.50">l..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::set_ip (43 samples, 1.58%)</title><rect x="95.9529%" y="181" width="1.5820%" height="15" fill="rgb(220,193,23)"/><text x="96.2029%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="165" width="0.1104%" height="15" fill="rgb(230,90,52)"/><text x="97.6746%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="149" width="0.1104%" height="15" fill="rgb(252,106,19)"/><text x="97.6746%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="133" width="0.1104%" height="15" fill="rgb(206,74,20)"/><text x="97.6746%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="117" width="0.1104%" height="15" fill="rgb(230,138,44)"/><text x="97.6746%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="101" width="0.1104%" height="15" fill="rgb(235,182,43)"/><text x="97.6746%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="85" width="0.1104%" height="15" fill="rgb(242,16,51)"/><text x="97.6746%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="69" width="0.1104%" height="15" fill="rgb(248,9,4)"/><text x="97.6746%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="53" width="0.1104%" height="15" fill="rgb(210,31,22)"/><text x="97.6746%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.11%)</title><rect x="97.4246%" y="37" width="0.1104%" height="15" fill="rgb(239,54,39)"/><text x="97.6746%" y="47.50"></text></g><g><title>laythe_core::hooks::Hooks::call (1,116 samples, 41.06%)</title><rect x="56.9169%" y="277" width="41.0596%" height="15" fill="rgb(230,99,41)"/><text x="57.1669%" y="287.50">laythe_core::hooks::Hooks::call</text></g><g><title>&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::call (1,109 samples, 40.80%)</title><rect x="57.1744%" y="261" width="40.8021%" height="15" fill="rgb(253,106,12)"/><text x="57.4244%" y="271.50">&lt;laythe_vm::vm::VmExecutor&lt;I&gt; as laythe_core::hooks::CallContext&gt;::..</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::to_call_result (12 samples, 0.44%)</title><rect x="97.5350%" y="245" width="0.4415%" height="15" fill="rgb(213,46,41)"/><text x="97.7850%" y="255.50"></text></g><g><title>laythe_core::iterator::SlIterator::current (9 samples, 0.33%)</title><rect x="97.9765%" y="277" width="0.3311%" height="15" fill="rgb(215,133,35)"/><text x="98.2265%" y="287.50"></text></g><g><title>&lt;laythe_lib::global::primitives::number::TimesIterator as laythe_core::iterator::SlIter&gt;::current (7 samples, 0.26%)</title><rect x="98.4915%" y="261" width="0.2575%" height="15" fill="rgb(213,28,5)"/><text x="98.7415%" y="271.50"></text></g><g><title>&lt;laythe_lib::global::primitives::number::TimesIterator as laythe_core::iterator::SlIter&gt;::next (10 samples, 0.37%)</title><rect x="98.7491%" y="261" width="0.3679%" height="15" fill="rgb(215,77,49)"/><text x="98.9991%" y="271.50"></text></g><g><title>laythe_core::iterator::SlIterator::next (23 samples, 0.85%)</title><rect x="98.3076%" y="277" width="0.8462%" height="15" fill="rgb(248,100,22)"/><text x="98.5576%" y="287.50"></text></g><g><title>&lt;laythe_lib::global::primitives::iter::FilterIterator as laythe_core::iterator::SlIter&gt;::next (1,181 samples, 43.45%)</title><rect x="55.8499%" y="293" width="43.4511%" height="15" fill="rgb(208,67,9)"/><text x="56.0999%" y="303.50">&lt;laythe_lib::global::primitives::iter::FilterIterator as laythe_core::i..</text></g><g><title>laythe_core::utils::is_falsey (4 samples, 0.15%)</title><rect x="99.1538%" y="277" width="0.1472%" height="15" fill="rgb(219,133,21)"/><text x="99.4038%" y="287.50"></text></g><g><title>laythe_core::iterator::SlIterator::next (1,738 samples, 63.94%)</title><rect x="35.3937%" y="341" width="63.9441%" height="15" fill="rgb(246,46,29)"/><text x="35.6437%" y="351.50">laythe_core::iterator::SlIterator::next</text></g><g><title>&lt;laythe_lib::global::primitives::iter::MapIterator as laythe_core::iterator::SlIter&gt;::next (1,734 samples, 63.80%)</title><rect x="35.5408%" y="325" width="63.7969%" height="15" fill="rgb(246,185,52)"/><text x="35.7908%" y="335.50">&lt;laythe_lib::global::primitives::iter::MapIterator as laythe_core::iterator::SlIter&gt;::next</text></g><g><title>laythe_core::iterator::SlIterator::next (1,182 samples, 43.49%)</title><rect x="55.8499%" y="309" width="43.4879%" height="15" fill="rgb(252,136,11)"/><text x="56.0999%" y="319.50">laythe_core::iterator::SlIterator::next</text></g><g><title>_start (2,137 samples, 78.62%)</title><rect x="20.8609%" y="565" width="78.6240%" height="15" fill="rgb(219,138,53)"/><text x="21.1109%" y="575.50">_start</text></g><g><title>__libc_start_main (2,136 samples, 78.59%)</title><rect x="20.8977%" y="549" width="78.5872%" height="15" fill="rgb(211,51,23)"/><text x="21.1477%" y="559.50">__libc_start_main</text></g><g><title>main (2,136 samples, 78.59%)</title><rect x="20.8977%" y="533" width="78.5872%" height="15" fill="rgb(247,221,28)"/><text x="21.1477%" y="543.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,136 samples, 78.59%)</title><rect x="20.8977%" y="517" width="78.5872%" height="15" fill="rgb(251,222,45)"/><text x="21.1477%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::rt::lang_start_internal::_{{closure}}::_{{closure}} (2,136 samples, 78.59%)</title><rect x="20.8977%" y="501" width="78.5872%" height="15" fill="rgb(217,162,53)"/><text x="21.1477%" y="511.50">std::rt::lang_start_internal::_{{closure}}::_{{closure}}</text></g><g><title>std::rt::lang_start::_{{closure}} (2,136 samples, 78.59%)</title><rect x="20.8977%" y="485" width="78.5872%" height="15" fill="rgb(229,93,14)"/><text x="21.1477%" y="495.50">std::rt::lang_start::_{{closure}}</text></g><g><title>laythe::main (2,136 samples, 78.59%)</title><rect x="20.8977%" y="469" width="78.5872%" height="15" fill="rgb(209,67,49)"/><text x="21.1477%" y="479.50">laythe::main</text></g><g><title>laythe_vm::vm::Vm&lt;I&gt;::run (2,136 samples, 78.59%)</title><rect x="20.8977%" y="453" width="78.5872%" height="15" fill="rgb(213,87,29)"/><text x="21.1477%" y="463.50">laythe_vm::vm::Vm&lt;I&gt;::run</text></g><g><title>laythe_vm::vm::Vm&lt;I&gt;::interpret (2,136 samples, 78.59%)</title><rect x="20.8977%" y="437" width="78.5872%" height="15" fill="rgb(205,151,52)"/><text x="21.1477%" y="447.50">laythe_vm::vm::Vm&lt;I&gt;::interpret</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::run (2,136 samples, 78.59%)</title><rect x="20.8977%" y="421" width="78.5872%" height="15" fill="rgb(253,215,39)"/><text x="21.1477%" y="431.50">laythe_vm::vm::VmExecutor&lt;I&gt;::run</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::op_invoke (2,136 samples, 78.59%)</title><rect x="20.8977%" y="405" width="78.5872%" height="15" fill="rgb(221,220,41)"/><text x="21.1477%" y="415.50">laythe_vm::vm::VmExecutor&lt;I&gt;::op_invoke</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call (2,136 samples, 78.59%)</title><rect x="20.8977%" y="389" width="78.5872%" height="15" fill="rgb(218,133,21)"/><text x="21.1477%" y="399.50">laythe_vm::vm::VmExecutor&lt;I&gt;::resolve_call</text></g><g><title>laythe_vm::vm::VmExecutor&lt;I&gt;::call_native_method (2,136 samples, 78.59%)</title><rect x="20.8977%" y="373" width="78.5872%" height="15" fill="rgb(221,193,43)"/><text x="21.1477%" y="383.50">laythe_vm::vm::VmExecutor&lt;I&gt;::call_native_method</text></g><g><title>&lt;laythe_lib::global::primitives::iter::IterReduce as laythe_core::native::NativeMethod&gt;::call (2,136 samples, 78.59%)</title><rect x="20.8977%" y="357" width="78.5872%" height="15" fill="rgb(240,128,52)"/><text x="21.1477%" y="367.50">&lt;laythe_lib::global::primitives::iter::IterReduce as laythe_core::native::NativeMethod&gt;::call</text></g><g><title>laythe_core::utils::is_falsey (4 samples, 0.15%)</title><rect x="99.3377%" y="341" width="0.1472%" height="15" fill="rgb(253,114,12)"/><text x="99.5877%" y="351.50"></text></g><g><title>laythe (2,713 samples, 99.82%)</title><rect x="0.0000%" y="581" width="99.8160%" height="15" fill="rgb(215,223,47)"/><text x="0.2500%" y="591.50">laythe</text></g><g><title>laythe_core::signature::ParameterKind::is_valid (9 samples, 0.33%)</title><rect x="99.4849%" y="565" width="0.3311%" height="15" fill="rgb(248,225,23)"/><text x="99.7349%" y="575.50"></text></g><g><title>all (2,718 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(250,108,0)"/><text x="0.2500%" y="607.50"></text></g><g><title>perf (5 samples, 0.18%)</title><rect x="99.8160%" y="581" width="0.1840%" height="15" fill="rgb(228,208,7)"/><text x="100.0660%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="565" width="0.1840%" height="15" fill="rgb(244,45,10)"/><text x="100.0660%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="549" width="0.1840%" height="15" fill="rgb(207,125,25)"/><text x="100.0660%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="533" width="0.1840%" height="15" fill="rgb(210,195,18)"/><text x="100.0660%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="517" width="0.1840%" height="15" fill="rgb(249,80,12)"/><text x="100.0660%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="501" width="0.1840%" height="15" fill="rgb(221,65,9)"/><text x="100.0660%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="485" width="0.1840%" height="15" fill="rgb(235,49,36)"/><text x="100.0660%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="469" width="0.1840%" height="15" fill="rgb(225,32,20)"/><text x="100.0660%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="453" width="0.1840%" height="15" fill="rgb(215,141,46)"/><text x="100.0660%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.18%)</title><rect x="99.8160%" y="437" width="0.1840%" height="15" fill="rgb(250,160,47)"/><text x="100.0660%" y="447.50"></text></g></svg></svg>