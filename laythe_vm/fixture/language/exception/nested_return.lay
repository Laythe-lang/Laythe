fn notThrower() {
  try {
    // random instructions to just make the fun bigger
    // to excerise the error
    let a = 10 + 10;
    let b = 5 + 5;
    let c = a / b * a * a;
    c / a * b;
    return 10;
  } catch e {
    assert(false);
  }
}

let caught = false;

try {
  notThrower();
  raise Error("boom");
  assert(false);
} catch e: Error {
  caught = true;
  assertEq(e.message, "boom");
  assertEq(e.backTrace.len(), 1);
  assert(e.backTrace[0].has("nested_return.lay:19 in script"));
}

assert(true);
