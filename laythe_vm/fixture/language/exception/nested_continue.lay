fn notThrower() {
  for i in 1.times() {
    try {
      // random instructions to just make the fun bigger
      // to excerise the error
      let a = 10 + 10;
      let b = 5 + 5;
      let c = a / b * a * a;
      c / a * b;
      continue;
    } catch e: Error {
      assert(false);
    }
  }
}

let caught = false;

try {
  notThrower();
  raise Error("boom");
  assert(false);
} catch e {
  caught = true;
  assertEq(e.message, "boom");
  assertEq(e.backTrace.len(), 1);
  assert(e.backTrace[0].has("nested_continue.lay:21 in script"));
}

assert(caught);

